package pt.edu.academiafa.mapWebApp.app

import scala.scalajs.js.annotation.JSExport
import scala.scalajs.js
import js.Dynamic.{ global => g, newInstance => jsnew, literal => lit }
import org.scalajs.dom
import dom.document
import org.scalajs.dom.XMLHttpRequest
import scala.scalajs.js.JSON
import scala.scalajs.js.Date
import pt.edu.academiafa.mapWebApp.config.Configuration

object MissionViewer extends js.JSApp {

  def main(): Unit = {
    println("---------Mission Information System---------------")

    def initialize() = js.Function{

      
      val xmlHttpRequest = new dom.XMLHttpRequest

  //  xmlHttpRequest.open("GET", uavServiceHost + ":" + uavServicePort.toString + "/telemetry/" , false)
     xmlHttpRequest.open("GET", "http://62.28.239.27:8080/telemetry/" , false)
    xmlHttpRequest.send();
    val result = JSON.parse(xmlHttpRequest.responseText)

    if (result.cod.toString() == "404") {
      g.alert("UAV telemetry is unavailable.")
    } else {
      
      
      document.getElementById("vId").innerHTML = "" + result.vId 
      document.getElementById("ias").innerHTML = result.ias + " m/s"
      document.getElementById("alt").innerHTML = result.loc.alt + " m"
      document.getElementById("loc").innerHTML = "[" + result.loc.lat + ", " + result.loc.lon + "]"
      document.getElementById("timestamp").innerHTML = msToTime(result.timestamp.toString.toLong)


      updateMap(result.loc.lat.toString.toDouble, result.loc.lon.toString.toDouble)
    }
  } 

  def updateMap(lat: Double, long: Double) = {
    val map_canvas = document.getElementById("map_canvas")
    val map_options = lit(center = (jsnew(g.google.maps.LatLng))(lat, long), zoom = 3, mapTypeId = g.google.maps.MapTypeId.ROADMAP)
    val gogleMap = (jsnew(g.google.maps.Map))(map_canvas, map_options)
    val marker = (jsnew(g.google.maps.Marker))(lit(map = gogleMap, position = (jsnew(g.google.maps.LatLng)(lat, long))))
  }

  def msToTime(unix_timestamp: Long) = {
    val date = new Date(unix_timestamp * 1000);
    val hrs = date.getHours();
    val mins = date.getMinutes();
    val secs = date.getSeconds();
    hrs + ":" + mins + ":" + secs
  }

    google.maps.event.addDomListener(window, "load", initialize)
  }
}
